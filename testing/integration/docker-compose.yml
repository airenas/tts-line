version: '3.7'

services:

  tts-line:
    image: airenas/tts-line:${tts_version}
    environment:
      - LOGGER_LEVEL=DEBUG
      - CLEAN_URL=http://text-clean:8000/clean
      - NUMBERREPLACE_URL=http://integration-tests:9876/mock-number-replace
      - OBSCENE_URL=http://integration-tests:9876/mock-obscene-filter
      - NORMALIZE_URL=http://integration-tests:9876/mock-normalizer
      - TAGGER_URL=http://tagger:8000/tag
      - ACCENTER_URL=http://accenter:8000/accent?human=true&roe=true
      - ACRONYMS_URL=http://acronyms:8000/acronyms
      - TRANSCRIBER_URL=http://transcriber:8000/transcription?gem=gem1&joinatsi=true
      - CLITICS_URL=http://clitics:8000/clitics
      - AUDIOCONVERT_URL=http://audioconverter:8000/convert
      - ACOUSTICMODEL_URL=http://integration-tests:9876/mock-am
      - VOCODER_URL=http://192.168.1.77:8001/model    
      - COMPARATOR_URL=http://integration-tests:9876/mock-compare
      - MONGO_URL=mongodb://tts:Ui3Ic5Meej8Ki8tohxawe7jei3iaci@mongo:27017
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: on-failure     

  text-clean:
    image: airenas/tts-text-clean:${clean_version}

  tagger:
    image: airenas/tagger:0.6.61
    environment:
      - MORPHOLOGY_URL=http://semantika:8090/morphology
      - SEGMENTATION_URL=http://lex:8080/
    restart: on-failure
    depends_on:
      - semantika
      - lex 

  semantika:
    image: semantikadocker.vdu.lt/v2/morph:0.2
    restart: on-failure   

  lex:
    image: semantikadocker.vdu.lt/lex:latest
    restart: on-failure 

  clitics:
    container_name: clitics
    image: airenas/clitics:0.1.206
    environment:
      - SECRET=${CLITICS_SECRET} 
    restart: on-failure 

  audioconverter:
    container_name: audioconverter
    image: airenas/audio-convert-service:0.2.21
    restart: on-failure 
    shm_size: 200mb
    environment:
      - TEMPDIR=/dev/shm
      - GODEBUG=madvdontneed=1  

  transcriber:
    container_name: transcriber
    image: airenas/transcriber:1.3.1209
    environment:
      - SECRET=${TRANSCRIBER_SECRET} 
    restart: on-failure  

  accenter:
    container_name: accenter
    image: airenas/accenter:1.3.1209
    restart: on-failure
    environment:
      - lema.type=hunspell_lema
      - LEMA_HUNSPELL_SKIP_OFFENSIVE=false
      - SECRET=${ACCENTER_SECRET}
  
  acronyms:
    container_name: acronyms
    image: airenas/acronyms:0.1.303
    restart: on-failure 
    environment:
     - SECRET=${ACRONYMS_SECRET}      

  integration-tests:
    build:
      context: .
      dockerfile: ./Dockerfile.test
    depends_on:
      - tagger
      - tts-line
    environment:
      TTS_URL: http://tts-line:8000  
      MORPHOLOGY_URL: http://semantika:8090
      CLEAN_URL: http://text-clean:8000    
    volumes:
      - ../../:/go/src/
    command: -tags integration -v -count=1 ./testing/integration/...

  # unit-tests:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile.test
  #   volumes:
  #     - ../../:/go/src/
  #   command: -v -count=1 ./...

  mongo:
    image: mongo:4.4.1
    environment:
      MONGO_DATA_DIR: "/data/db"
      MONGO_LOG_DIR: "/dev/null"
      MONGO_INITDB_ROOT_USERNAME: tts
      MONGO_INITDB_ROOT_PASSWORD: Ui3Ic5Meej8Ki8tohxawe7jei3iaci
    command: mongod --logpath=/dev/null # --quiet