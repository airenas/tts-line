name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2


    - name: Get dependencies
      run: |
        go get -a ./...

    - name: Generate mocks
      run: make generate/mocks

    - name: Build
      run: go build -v ./...  

    - name: Get test dependencies
      run: |
        go get -t ./...

    - name: Test
      run: make test/unit
    
    - name: Test docker build
      run: make docker/tts-line/build docker/tts-clean/build clean-version=latest tts_version=latest   

    - name: Run vet & lint
      run: make test/lint
        
    - name: Go report
      run: curl -X POST -F "repo=github.com/${{github.repository}}" https://goreportcard.com/checks

    - name: Calc coverage
      run: |
        go test -v -covermode=count -coverprofile=coverage.out ./...
    - name: Convert coverage.out to coverage.lcov
      uses: jandelgado/gcov2lcov-action@v1.0.6
    - name: Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov    
  
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: airenas/tts-line:latest
        args: --file=build/tts-line/Dockerfile

    - name: Upload snyk result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif