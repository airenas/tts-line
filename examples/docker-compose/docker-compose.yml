version: '3.7'

services:
  # tts-line:
  #   image: airenas/tts-line:${SERVICE_VERSION}
  #   ports:
  #     - "${SERVICE_PORT}:8000"
  #     - 2345:2345 
  #   extra_hosts:
  #       host.docker.internal: host-gateway  
  #   environment:
  #     - LOGGER_LEVEL=DEBUG
  #     - NUMBERREPLACE_URL=http://hnum2txt:80/api/
  #     - OBSCENE_URL=http://obscene:3000/obscene-filter
  #     - NORMALIZE_URL=http://normalizer:3000/norm
  #     - TAGGER_URL=http://host.docker.internal:8000/tag
  #     - ACCENTER_URL=http://accenter:8000/accent?human=true&roe=true
  #     - ACRONYMS_URL=http://acronyms:8000/acronyms
  #     - TRANSCRIBER_URL=http://transcriber:8000/transcription?gem=gem1&joinatsi=true
  #     - CLITICS_URL=http://clitics:8000/clitics
  #     - ACOUSTICMODEL_URL=http://host.docker.internal:8007/synthesize
  #     - VOCODER_URL=http://192.168.1.77:8001/model    
  #     - MONGO_URL=mongodb://tts:Ui3Ic5Meej8Ki8tohxawe7jei3iaci@mongo:27017
  #     - AUDIOCONVERT_URL=http://audioconverter:8000/convert
  #     - CLEAN_URL=http://text-clean:8000/clean
  #     - COMPARATOR_URL=http://comparator:3000/resynthvalid 
  #   volumes:
  #     - ./config.yaml:/app/config.yaml:ro  

  text-clean:
    image: airenas/tts-text-clean:0.5.7
    ports:
      - "8011:8000"  

  hnum2txt:
    container_name: hnum2txt
    image: intelektikalt/hnum2txt:0.2.0
    environment:
      - "ConnectionStrings:Url=${TAGGER_URL}" 
    ports:
      - "8017:80"     

  normalizer:
    image: intelektikalt/text-normalizer:0.1.33
    restart: on-failure  
    ports:
      - "8012:3000"

  audioconverter:
    image: airenas/audio-convert-service:0.2.21
    ports:
      - "8013:8000"

  comparator:
    image: intelektikalt/resynth-validator:0.1.8
    ports:
      - "8014:3000"

  tagger-ml:
    image: airenas/ml-tagger:0.0.9
    environment:
      - SEGMENTATION_URL=http://lex:8080/
      - RUST_LOG=INFO,onnxruntime_ng=ERROR
      - ONNX_THREADS=4
      - DATA_DIR=/data/models/${TAGGER_MODEL}
      - EMBEDDINGS_FILE=/data/models/${TAGGER_MODEL}/delfi_cbow.bin
      - ONNX_FILE=/data/models/${TAGGER_MODEL}/model.onnx
      - LEMMA_URL=http://lemma:8000/analyze/{}
      - LEMMA_CACHE=1000
      - EMBEDDINGS_CACHE=1000
      - LEX_URL=http://lex:8080/
      - CACHE_KEY=01J4HMRM6GAHP6HNE67JRXXKT4
    restart: unless-stopped
    volumes:
      - ./ml-tagger:/data/models
    ports:
      - "8018:8000"  

  lemma:
    image: airenas/lema:1.5.1218
    restart: unless-stopped
    environment:
     - LEMA_HUNSPELL_SKIP_OFFENSIVE=false
     - LEMA_TYPE=hunspell_lema
     - SECRET=${LEMMA_SECRET}    

  semantika:
    image: semantikadocker.vdu.lt/v2/morph:0.2
    restart: on-failure
    ports:
      - 10001:8060     

  lex:
    image: semantikadocker.vdu.lt/lex:latest
    restart: on-failure          
  
  clitics:
    image: airenas/clitics:0.1.206
    environment:
      - SECRET=${CLITICS_SECRET} 
    ports:
      - "8015:8000"      

  obscene:
    container_name: obscene
    image: intelektikalt/obscene-filter:0.1.16
    ports:
      - "8016:3000"   

  acronyms:
    container_name: acronyms
    image: airenas/acronyms:0.1.439-c326c41
    restart: on-failure 
    environment:
     - SECRET=${ACRONYMS_SECRET} 
    ports:
      - "8019:8000"      

  transcriber:
    container_name: transcriber
    image: airenas/transcriber:1.3.1213
    environment:
      - SECRET=${TRANSCRIBER_SECRET} 
    restart: on-failure  
    ports:
      - "8020:8000"        


  accenter:
    container_name: accenter
    image: airenas/accenter:1.3.1209
    restart: on-failure
    environment:
      - lema.type=hunspell_lema
      - LEMA_HUNSPELL_SKIP_OFFENSIVE=false
      - SECRET=${ACCENTER_SECRET}            
    ports:
      - "8021:8000"        

  mongo:
    image: mongo:4.4.1
    environment:
      MONGO_DATA_DIR: "/data/db"
      MONGO_LOG_DIR: "/dev/null"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - ./.mongo:/data/db  
    command: mongod --logpath=/dev/null # --quiet
    ports:
      - "27017:27017"
